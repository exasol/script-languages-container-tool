name: Release Droid - Upload GitHub Release Assets

on:
  workflow_dispatch:
    inputs:
      upload_url:
        description: 'Upload URL'
        required: true

jobs:
  check-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python 3.8 for integration-test-docker-environment
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: 1.1.14
      - name: Check Release
        run: ./scripts/build/check_release.sh

  test-docker-starter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Test ./exaslct
        run: ./exaslct --help

  prep-testbed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: |
          sudo apt-get install jq
          echo "::set-output name=matrix::$(bash ./scripts/test/get_all_tests.sh)"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  test-all:
    needs: prep-testbed
    environment: ci_test
    strategy:
      fail-fast: false
      matrix:
        exasol_version:
          - "default"
        python_version:
          - 3.8
        test-path: ${{fromJson(needs.prep-testbed.outputs.matrix)}}
    runs-on: ubuntu-latest
    name: ${{ matrix.test-path.name }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python 3.8 for integration-test-docker-environment
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: 1.1.14

      - name: Test exaslct_with_poetry
        run: ./scripts/test/exaslct_with_poetry.sh --help

      - name: Run all tests
        run: ./scripts/test/run_test.sh ${{ matrix.test-path.path }}
        env: # Set the secret as an input
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWD: ${{ secrets.DOCKER_PASSWD }}

  upload:
    needs: test-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: 1.1.14

      - name: Build Release
        run: |
          bash ./scripts/build/build_release.sh
      - name: Generate sha512sum files
        run: find ./dist -maxdepth 1 -type f -exec bash -c 'sha512sum {} > {}.sha512' \;
        shell: bash
      - name: Upload assets to the GitHub release draft
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ github.event.inputs.upload_url }}
          asset_path: dist/*