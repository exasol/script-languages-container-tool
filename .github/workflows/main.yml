name: CI

on:
  push:

jobs:
  test-exaslct-alias-script:
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.10", "3.11", "3.12"]
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.12.0
        with:
          python-version: '${{ matrix.python_version }}'
          poetry-version: '1.8.2'

      - name: Test exaslct
        run: poetry run exaslct --help

  prep-testbed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          ALL_TESTS=`bash ./scripts/test/get_all_tests.sh`
          echo "matrix=$ALL_TESTS" >> "$GITHUB_OUTPUT"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  test-all:
    needs: prep-testbed
    environment: ci_test
    strategy:
      fail-fast: false
      matrix:
        exasol_version:
          - "default"
        python_version:
          - "3.10"
        test-path: ${{fromJson(needs.prep-testbed.outputs.matrix)}}
    runs-on: ubuntu-latest
    name: ${{ matrix.test-path.name }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.12.0
        with:
          python-version: '${{ matrix.python_version }}'
          poetry-version: '1.8.2'

      - name: Run all tests
        run: ./scripts/test/run_test.sh ${{ matrix.test-path.path }}
        env: # Set the secret as an input
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWD: ${{ secrets.DOCKER_PASSWD }}
