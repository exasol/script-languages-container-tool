name: CI

on:
  push:

jobs:
  build-matrix:
    name: Generate Build Matrix
    uses: ./.github/workflows/matrix-python.yml

  test-exaslct-alias-script:
    needs: build-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-matrix.outputs.matrix) }}

    runs-on: ubuntu-24.04
    steps:

      - uses: actions/checkout@v4

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@1.0.1
        with:
          python-version: '${{ matrix.python_version }}'
          poetry-version: '2.1.2'

      - name: Test exaslct
        run: poetry run exaslct --help

  prep-testbed:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          ALL_TESTS=`bash ./scripts/test/get_all_tests.sh`
          echo "matrix=$ALL_TESTS" >> "$GITHUB_OUTPUT"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  test-all:
    needs: prep-testbed
    environment: ci_test
    strategy:
      fail-fast: false
      matrix:
        exasol_version:
          - "default"
        python_version:
          - "3.10"
        test-path: ${{fromJson(needs.prep-testbed.outputs.matrix)}}
    runs-on: ubuntu-24.04
    name: ${{ matrix.test-path.name }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.12.0
        with:
          python-version: '${{ matrix.python_version }}'
          poetry-version: '2.1.2'

      - name: Allow unprivileged user namespaces
        run: sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0
      - name: Run all tests
        run: ./scripts/test/run_test.sh ${{ matrix.test-path.path }}
        env: # Set the secret as an input
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWD: ${{ secrets.DOCKER_PASSWD }}


  test-gpu:
    environment: ci_test
    env:
      PYTHON_VERSION: "3.10"
    strategy:
      fail-fast: false
      matrix:
        exasol_version:
          - "default"
        python_version:
          - "3.10"
    runs-on:
      labels: int-linux-x64-4core-gpu-t4-ubuntu24.04-1
    name: GPU Test
    steps:
      - uses: actions/checkout@v4

        #Cannot use exasol/python-toolbox/.github/actions/python-environment here
        #because pipx is not installed on int-linux-x64-4core-gpu-t4-ubuntu24.04-1
      - name: Setup Python (${{ env.PYTHON_VERSION }})
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install pipx and poetry
        run: |
          pip install pipx
          pipx install poetry=="2.1.2"
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Setup Poetry
        run: |
          poetry env use python3
          poetry install

      - name: Allow unprivileged user namespaces
        run: sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0
      - name: Run GPU tests
        run: ./scripts/test/run_test.sh "test/test_docker_api_run_db_gpu_test.py"
