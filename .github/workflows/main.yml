name: CI

on:
  push:

jobs:
  test-docker-starter:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Test ./exaslct
        run: ./exaslct --help

  test-installer:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: "Run install tests"
        run: "bash installer/tests/run_tests.sh"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  prep-testbed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          sudo apt-get install jq
          echo "::set-output name=matrix::$(bash ./get_all_tests.sh)"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  test-all:
    needs: prep-testbed
    strategy:
      fail-fast: false
      matrix:
        exasol_version:
          - "default"
        python_version:
          - 3.6
        test-path: ${{fromJson(needs.prep-testbed.outputs.matrix)}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python 3.6 for integration-test-docker-environment
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.6

      - name: Test starter_scripts/exaslct_with_poetry
        run: starter_scripts/exaslct_with_poetry.sh --help

      - name: Run all tests
        run: ./run_test.sh ${{ matrix.test-path }}

  publish-main:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: publish
    steps:
      - uses: actions/checkout@v2
      - name: Build new Docker image
        run: "bash starter_scripts/build_docker_runner_image.sh"
      - name: Docker login
        run: echo "$SECRET_DOCKER_TOKEN" | docker login --username "$SECRET_DOCKER_USER_NAME" --password-stdin
        env: # Set the secret as an input
          SECRET_DOCKER_USER_NAME: ${{ secrets.DOCKER_USER_NAME }}
          SECRET_DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      - name: Push new Docker image
        run: "bash starter_scripts/push_docker_runner_image.sh main"
